from aiogram import types, Router
from aiogram.filters import Command
from django.conf import settings
from app.telegram.management.commands.app.button import get_inline_keyboard, get_main_menu, get_profile_buttons,\
get_support_buttons, get_whatsapp_manager_button
import logging
from app.telegram.management.commands.app.db import get_user_by_chat_id, update_chat_id

router = Router()

@router.message(Command("start"))
async def start(message: types.Message):
    chat_id = message.chat.id
    username = message.from_user.username
    full_name = message.from_user.full_name or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    logging.info(f"–ü–æ–ª—É—á–µ–Ω chat_id: {chat_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}")
    try:
        user = await get_user_by_chat_id(chat_id)
        if user:
            await update_chat_id(user, chat_id)
            await message.answer(
                f"‚úÖ –ü—Ä–∏–≤–µ—Ç, {user.full_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
                reply_markup=get_main_menu()
            )
        else:
            registration_link = f'{settings.SITE_BASE_URL}/register/?chat_id={chat_id}'
            logging.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {registration_link}")
            await message.answer(
                "‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
                reply_markup=get_inline_keyboard(registration=True, chat_id=chat_id)
            )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.message(lambda message: message.text == "üö´ –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã")
async def forbidden_goods(message: types.Message):
    text = (
        "üì¢ *–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∫ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –≥—Ä—É–∑–æ–≤* ‚ùó\n\n"
        "üî¥ *–õ–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã, –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–µ, –ø—Å–∏—Ö–æ—Ç—Ä–æ–ø–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞*;\n"
        "üî¥ *–õ–µ–≥–∫–æ–≤–æ—Å–ø–ª–∞–º–µ–Ω—è—é—â–∏–µ—Å—è, –≤–∑—Ä—ã–≤—á–∞—Ç—ã–µ, –µ–¥–∫–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞* (—Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∏, —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≥–∞–∑—ã –≤ –±–∞–ª–ª–æ–Ω–∞—Ö –∏ —Ç.–¥.);\n"
        "üî¥ *–û—Å—Ç—Ä—ã–µ, –∫–æ–ª—é—â–∏–µ, —Ä–µ–∂—É—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã*;\n"
        "üî¥ *–û—Ä—É–∂–∏–µ, –∏–º–∏—Ç–∞—Ü–∏—è –æ—Ä—É–∂–∏—è*;\n"
        "üî¥ *–ü—Ä–µ–¥–º–µ—Ç—ã –≤–æ–µ–Ω–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞*;\n"
        "üî¥ *–ñ–∏–¥–∫–∏–µ, —Å—ã–ø—É—á–∏–µ, –ø–æ—Ä–æ—à–∫–æ–≤—ã–µ, –≥—É—Å—Ç—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞*;\n"
        "üî¥ *–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —Å–∏–≥–∞—Ä–µ—Ç—ã*;\n\n"
        "üìå –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Å–æ–º–Ω–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫–∞–∑–∞ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —Ç–æ–≤–∞—Ä–∞, *–ª—É—á—à–µ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º*, "
        "–∏ –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –µ–≥–æ –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n"
        "‚ö†Ô∏è –≠—Ç–∏ —Ç–æ–≤–∞—Ä—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∞–∫—Ç–∞–º–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª. "
        "–í —Å–ª—É—á–∞–µ –∑–∞–∫–∞–∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, *–Ω–∞–ª–∞–≥–∞–µ—Ç—Å—è —à—Ç—Ä–∞—Ñ –≤ —Ä–∞–∑–º–µ—Ä–µ 10-50 —Ç—ã—Å—è—á —Å–æ–º*."
    )
    await message.answer(text, parse_mode="Markdown")

@router.message(lambda message: message.text == "‚öôÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_info(message: types.Message):
    text = (
        "üì© *–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º*\n\n"
        "üìç *–ü–í–ó*: –û—à\n"
        "üìç *–ü–í–ó —Ç–µ–ª–µ—Ñ–æ–Ω*: [996505180600](tel:996558486448)\n"
        "üìç *–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã*: \n"
        "üìç *–õ–æ–∫–∞—Ü–∏—è –Ω–∞ –ö–∞—Ä—Ç–µ*: \n\n"
        "[üåç LiderCargo (WhatsApp)](https://wa.me/996505180600)"
    )
    await message.answer(text, parse_mode="Markdown", reply_markup=get_support_buttons())

@router.message(lambda message: message.text == "üìç –ê–¥—Ä–µ—Å–∞")
async def send_address_info(message: types.Message):
    text = (
        "üì© *–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–∏–∂–µ. –≠—Ç–æ –∞–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ üá®üá≥:*\n\n"
        "üü¢ *–ê–ö–ë-1452*\n"
        "üü¢ *17633321256*\n"
        "üü¢ *–ì—É–∞–Ω–¥—É–Ω, –§–æ—à–∞–Ω—å, –ù–∞–Ω—å—Ö–∞–π, –Ø—Ö—É–∞ –õ–æ–≥–∏—Å—Ç–∏–∫*\n\n"
        "üì¢ –ß—Ç–æ–±—ã –≤–∞—à–∏ –ø–æ—Å—ã–ª–∫–∏ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∏—Å—å, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω *–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞* "
        "–∏ –ø–æ–ª—É—á–∏—Ç–µ *–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ* –æ—Ç –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n\n"
        "üîπ üìû [996504546999](tel:996504546999)\n\n"
        "‚ÄºÔ∏è‚ÄºÔ∏è *–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚úÖ –∞–¥—Ä–µ—Å–∞ –ö–∞—Ä–≥–æ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –≤–∞—à–∏ –ø–æ—Å—ã–ª–∫–∏ üì¶*"
    )
    await message.answer(text, parse_mode="Markdown", reply_markup=get_whatsapp_manager_button())

@router.message(lambda message: message.text == "üßë‚Äçüíº –ü—Ä–æ—Ñ–∏–ª—å")
async def send_profile_info(message: types.Message):
    chat_id = message.chat.id
    user = await get_user_by_chat_id(chat_id)
    if not user:
        await message.answer("‚ö†Ô∏è –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")
        return
    pickup_point_name = user.pickup_point.city if user.pickup_point else "–ù–µ —É–∫–∞–∑–∞–Ω"
    text = (
        "üìú *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å üìú*\n\n"
        f"üÜî *–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π ID*: `{user.id_user}`\n"
        f"üë§ *–§–ò–û*: {user.full_name}\n"
        f"üìû *–ù–æ–º–µ—Ä*: `{user.phone_number}`\n"
        f"üè° *–ê–¥—Ä–µ—Å*: {user.address}\n\n"
        f"üìç *–ü–í–ó*: {pickup_point_name}\n"
        f"üìç *–ü–í–ó —Ç–µ–ª–µ—Ñ–æ–Ω*:  [996505180600](tel:996558486448)\n"
        "üìç *–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã*: \n"
        "üìç *–õ–æ–∫–∞—Ü–∏—è –Ω–∞ –ö–∞—Ä—Ç–µ*: \n\n"
        "[üåç LiderCargo (WhatsApp)](https://www.youtube.com/)"
    )
    await message.answer(text, parse_mode="Markdown", reply_markup=get_profile_buttons(chat_id))