from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from django.conf import settings
from asgiref.sync import sync_to_async
from app.web_app.models import User

async def get_inline_keyboard(chat_id=None):
    buttons = [
        [InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url="https://www.youtube.com/")]
    ]

    if chat_id:
        user_exists = await sync_to_async(User.objects.filter(chat_id=chat_id).exists)()
        if user_exists:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            login_url = f"{settings.SITE_BASE_URL}/cargopart/?chat_id={chat_id}&auto_login=true"
            buttons.append([
                InlineKeyboardButton(
                    text='üîë –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
                    web_app=WebAppInfo(url=login_url)
                )
            ])
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            registration_url = f"{settings.SITE_BASE_URL}/register/?chat_id={chat_id}"
            buttons.append([
                InlineKeyboardButton(
                    text='üìù –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é',
                    web_app=WebAppInfo(url=registration_url)
                )
            ])
    return InlineKeyboardMarkup(inline_keyboard=buttons)



def get_main_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üßë‚Äçüíº –ü—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="üìç –ê–¥—Ä–µ—Å–∞"), KeyboardButton(text="üì¶ –ú–æ–∏ –ø–æ—Å—ã–ª–∫–∏")],
            [KeyboardButton(text="üìï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"), KeyboardButton(text="üö´ –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"), KeyboardButton(text="‚öôÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å"), KeyboardButton(text="‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–∫")]
        ],
        resize_keyboard=True
    )
    return keyboard

async def get_profile_buttons(chat_id):
    user_exists = await sync_to_async(User.objects.filter(chat_id=chat_id).exists)()
    
    if user_exists:
        login_url = f"{settings.SITE_BASE_URL}/cargopart/?chat_id={chat_id}&auto_login=true"
        button_text = "üîë –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
    else:
        login_url = f"{settings.SITE_BASE_URL}/?chat_id={chat_id}"
        button_text = "üìù –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=button_text,
                    web_app=WebAppInfo(url=login_url)
                )
            ]
        ]
    )
    return keyboard


def get_support_buttons():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì≤ –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞ WhatsApp", url="https://www.youtube.com/")],
            [InlineKeyboardButton(text="üì∑ –ù–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º", url="https://www.youtube.com/")]
        ]
    )
    return keyboard

def get_whatsapp_manager_button():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì≤ WhatsApp –º–µ–Ω–µ–¥–∂–µ—Ä–∞", url="https://www.youtube.com/")]
        ]
    )
    return keyboard


def get_package_options_keyboard(track_number):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üè¢ –ó–∞–±—Ä–∞—Ç—å —Å–æ —Å–∫–ª–∞–¥–∞", callback_data=f"pickup_{track_number}"),
            InlineKeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∏—Ç—å", callback_data=f"deliver_{track_number}")
        ]
    ])
    return keyboard

def get_profile_courier():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìç –ê–¥—Ä–µ—Å–∞")],
            [KeyboardButton(text="üìï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"), KeyboardButton(text="‚öôÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å")]
        ],
        resize_keyboard=True
    )
    return keyboard