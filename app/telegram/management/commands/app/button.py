from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from django.conf import settings
from asgiref.sync import sync_to_async
from app.web_app.models import User, Settings

@sync_to_async
def get_settings():
    return Settings.objects.first()

async def get_inline_keyboard(chat_id=None):
    app_settings = await get_settings()
    buttons = [
        [InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url=app_settings.watapp or "https://default-link.com/")]
    ]

    if chat_id:
        user_exists = await sync_to_async(User.objects.filter(chat_id=chat_id).exists)()
        if user_exists:
            login_url = f"{settings.SITE_BASE_URL}/cargopart/?chat_id={chat_id}&auto_login=true"
            buttons.append([
                InlineKeyboardButton(
                    text='üîë –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
                    web_app=WebAppInfo(url=login_url)
                )
            ])
        else:
            registration_url = f"{settings.SITE_BASE_URL}/register/?chat_id={chat_id}"
            buttons.append([
                InlineKeyboardButton(
                    text='üìù –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é',
                    web_app=WebAppInfo(url=registration_url)
                )
            ])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üßë‚Äçüíº –ü—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="üìç –ê–¥—Ä–µ—Å–∞"), KeyboardButton(text="üì¶ –ú–æ–∏ –ø–æ—Å—ã–ª–∫–∏")],
            [KeyboardButton(text="üìï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"), KeyboardButton(text="üö´ –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"), KeyboardButton(text="‚öôÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å"), KeyboardButton(text="‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–∫")]
        ],
        resize_keyboard=True
    )
    return keyboard

# –ö–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
async def get_profile_buttons(chat_id):
    user_exists = await sync_to_async(User.objects.filter(chat_id=chat_id).exists)()
    
    if user_exists:
        login_url = f"{settings.SITE_BASE_URL}/cargopart/?chat_id={chat_id}&auto_login=true"
        button_text = "üîë –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
    else:
        login_url = f"{settings.SITE_BASE_URL}/register/?chat_id={chat_id}"
        button_text = "üìù –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=button_text,
                    web_app=WebAppInfo(url=login_url)
                )
            ]
        ]
    )
    return keyboard

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è WhatsApp –º–µ–Ω–µ–¥–∂–µ—Ä–∞
async def get_whatsapp_manager_button():
    app_settings = await get_settings()
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì≤ WhatsApp –º–µ–Ω–µ–¥–∂–µ—Ä–∞", url=app_settings.watapp or "https://default-link.com/")]
        ]
    )
    return keyboard

# –û–ø—Ü–∏–∏ –¥–ª—è –ø–æ—Å—ã–ª–æ–∫
def get_package_options_keyboard(track_number):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üè¢ –ó–∞–±—Ä–∞—Ç—å —Å–æ —Å–∫–ª–∞–¥–∞", callback_data=f"pickup_{track_number}"),
            InlineKeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∏—Ç—å", callback_data=f"deliver_{track_number}")
        ]
    ])
    return keyboard

def get_profile_courier():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìç –ê–¥—Ä–µ—Å–∞")],
            [KeyboardButton(text="üìï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"), KeyboardButton(text="‚öôÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å")]
        ],
        resize_keyboard=True
    )
    return keyboard
